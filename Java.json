[
  {
    "question": "What is the default value of a local variable in Java?",
    "options": ["null", "0", "Depends on data type", "No default value"],
    "answer": "No default value"
  },
  {
    "question": "Which of the following is not a Java keyword?",
    "options": ["static", "Boolean", "void", "private"],
    "answer": "Boolean"
  },
  {
    "question": "Which data type is used to store text in Java?",
    "options": ["String", "int", "char", "boolean"],
    "answer": "String"
  },
  {
    "question": "How do you find the length of a string in Java?",
    "options": ["length()", "getSize()", "size()", "getLength()"],
    "answer": "length()"
  },
  {
    "question": "Which of the following is not a valid Java identifier?",
    "options": ["myVar", "123abc", "_myVar", "$myVar"],
    "answer": "123abc"
  },
  {
    "question": "What is the correct way to call the constructor of a parent class in Java?",
    "options": ["super()", "super(void)", "super.class()", "parent()"],
    "answer": "super()"
  },
  {
    "question": "What is the purpose of garbage collection in Java?",
    "options": ["Allocate memory", "Delete unused objects", "Handle errors", "Execute program"],
    "answer": "Delete unused objects"
  },
  {
    "question": "Which keyword is used for exception handling in Java?",
    "options": ["try", "catch", "finally", "All of these"],
    "answer": "All of these"
  },
  {
    "question": "What is the use of the 'static' keyword in Java?",
    "options": ["To create instance variables", "To create class variables", "To override methods", "To create constructors"],
    "answer": "To create class variables"
  },
  {
    "question": "What is method overloading in Java?",
    "options": ["Same method name, different parameters", "Same method name, same parameters", "Different method name, same parameters", "Same method in different class"],
    "answer": "Same method name, different parameters"
  },
  {
    "question": "What is the role of an interface in Java?",
    "options": ["To provide multiple inheritance", "To store data", "To give method implementation", "To create a class"],
    "answer": "To provide multiple inheritance"
  },
  {
    "question": "What is the use of 'this' keyword in Java?",
    "options": ["To refer to the current object", "To refer to the parent class", "To call a static method", "To allocate memory"],
    "answer": "To refer to the current object"
  },
  {
    "question": "What does the 'final' keyword mean in Java?",
    "options": ["Makes a variable constant", "Makes a variable static", "Prevents method overriding", "All of the above"],
    "answer": "All of the above"
  },
  {
    "question": "What is an abstract class in Java?",
    "options": ["A class with some abstract methods", "A class with all methods implemented", "A class with no methods", "A class similar to an interface"],
    "answer": "A class with some abstract methods"
  },
  {
    "question": "Why are String objects immutable in Java?",
    "options": ["Because String class is final", "Because String class is secure", "Because String objects cannot be changed", "All of the above"],
    "answer": "All of the above"
  },
  {
    "question": "What is the use of 'super' keyword in Java?",
    "options": ["To refer to parent class", "To refer to current class", "To call static methods", "None of the above"],
    "answer": "To refer to parent class"
  },
  {
    "question": "What is the role of a constructor in Java?",
    "options": ["To initialize objects", "To call methods", "To return values", "To declare variables"],
    "answer": "To initialize objects"
  },
  {
    "question": "What is polymorphism in Java?",
    "options": ["An object can take many forms", "A method can have many names", "A class can have many objects", "None"],
    "answer": "An object can take many forms"
  },
  {
    "question": "Why is inheritance used in Java?",
    "options": ["For code reusability", "For memory allocation", "For error handling", "For data encryption"],
    "answer": "For code reusability"
  },
  {
    "question": "Which package does 'ArrayList' belong to in Java?",
    "options": ["java.util", "java.lang", "java.io", "java.net"],
    "answer": "java.util"
  },
  {
    "question": "What is an Exception in Java?",
    "options": ["An error condition in a program", "A normal function", "A variable name", "A class name"],
    "answer": "An error condition in a program"
  },
  {
    "question": "When is a static block executed in Java?",
    "options": ["At object creation", "When class is loaded", "When a method is called", "At the end of program"],
    "answer": "When class is loaded"
  },
  {
    "question": "What is the use of try-catch block in Java?",
    "options": ["To handle errors", "To read files", "To write data", "To execute program"],
    "answer": "To handle errors"
  },
  {
    "question": "What is the difference between an interface and an abstract class in Java?",
    "options": ["In interface, all methods are abstract", "In abstract class, some methods can be implemented", "Interface allows multiple inheritance", "All of the above"],
    "answer": "All of the above"
  },
  {
    "question": "What is the full form of JVM?",
    "options": ["Java Virtual Machine", "Java Variable Method", "Java Verified Machine", "None of these"],
    "answer": "Java Virtual Machine"
  },
  {
    "question": "What is the use of JDK in Java?",
    "options": ["Java Development Kit", "Java Debug Kit", "Java Design Kit", "Java Document Kit"],
    "answer": "Java Development Kit"
  },
  {
    "question": "What does the 'public' keyword define in Java?",
    "options": ["Accessible everywhere", "Accessible within class only", "Accessible within same package", "Accessible within subclass"],
    "answer": "Accessible everywhere"
  },
  {
    "question": "What is the use of 'while' loop in Java?",
    "options": ["To repeat code", "To check condition", "To declare variable", "To create object"],
    "answer": "To repeat code"
  },
  {
    "question": "What is the use of 'extends' keyword in Java?",
    "options": ["For inheritance", "To create objects", "To call methods", "To allocate memory"],
    "answer": "For inheritance"
  },
  {
    "question": "What is the role of 'main' method in Java?",
    "options": ["To start the program", "To create objects", "To allocate memory", "To handle errors"],
    "answer": "To start the program"
  }
]
